DEF_HELPER_3v(write_eflags, void, env, tl, i32)
DEF_HELPER_1(read_eflags, tl, env)
DEF_HELPER_2v(divb_AL, void, env, tl)
DEF_HELPER_2v(idivb_AL, void, env, tl)
DEF_HELPER_2v(divw_AX, void, env, tl)
DEF_HELPER_2v(idivw_AX, void, env, tl)
DEF_HELPER_2v(divl_EAX, void, env, tl)
DEF_HELPER_2v(idivl_EAX, void, env, tl)
#ifdef TARGET_X86_64
DEF_HELPER_2v(divq_EAX, void, env, tl)
DEF_HELPER_2v(idivq_EAX, void, env, tl)
#endif
DEF_HELPER_FLAGS_2v(cr4_testbit, TCG_CALL_NO_WG, void, env, i32)

DEF_HELPER_FLAGS_2v(bndck, TCG_CALL_NO_WG, void, env, i32)
DEF_HELPER_FLAGS_3(bndldx32, TCG_CALL_NO_WG, i64, env, tl, tl)
DEF_HELPER_FLAGS_3(bndldx64, TCG_CALL_NO_WG, i64, env, tl, tl)
DEF_HELPER_FLAGS_5v(bndstx32, TCG_CALL_NO_WG, void, env, tl, tl, i64, i64)
DEF_HELPER_FLAGS_5v(bndstx64, TCG_CALL_NO_WG, void, env, tl, tl, i64, i64)
DEF_HELPER_1v(bnd_jmp, void, env)

DEF_HELPER_2v(aam, void, env, int)
DEF_HELPER_2v(aad, void, env, int)
DEF_HELPER_1v(aaa, void, env)
DEF_HELPER_1v(aas, void, env)
DEF_HELPER_1v(daa, void, env)
DEF_HELPER_1v(das, void, env)

DEF_HELPER_2(lsl, tl, env, tl)
DEF_HELPER_2(lar, tl, env, tl)
DEF_HELPER_2v(verr, void, env, tl)
DEF_HELPER_2v(verw, void, env, tl)
DEF_HELPER_2v(lldt, void, env, int)
DEF_HELPER_2v(ltr, void, env, int)
DEF_HELPER_3v(load_seg, void, env, int, int)
DEF_HELPER_4v(ljmp_protected, void, env, int, tl, tl)
DEF_HELPER_5v(lcall_real, void, env, int, tl, int, int)
DEF_HELPER_5v(lcall_protected, void, env, int, tl, int, tl)
DEF_HELPER_2v(iret_real, void, env, int)
DEF_HELPER_3v(iret_protected, void, env, int, int)
DEF_HELPER_3v(lret_protected, void, env, int, int)
DEF_HELPER_2(read_crN, tl, env, int)
DEF_HELPER_3v(write_crN, void, env, int, tl)
DEF_HELPER_2v(lmsw, void, env, tl)
DEF_HELPER_1v(clts, void, env)
DEF_HELPER_FLAGS_3v(set_dr, TCG_CALL_NO_WG, void, env, int, tl)
DEF_HELPER_FLAGS_2(get_dr, TCG_CALL_NO_WG, tl, env, int)
DEF_HELPER_2v(invlpg, void, env, tl)

DEF_HELPER_1v(sysenter, void, env)
DEF_HELPER_2v(sysexit, void, env, int)
#ifdef TARGET_X86_64
DEF_HELPER_2v(syscall, void, env, int)
DEF_HELPER_2v(sysret, void, env, int)
#endif
DEF_HELPER_2v(hlt, void, env, int)
DEF_HELPER_2v(monitor, void, env, tl)
DEF_HELPER_2v(mwait, void, env, int)
DEF_HELPER_2v(pause, void, env, int)
DEF_HELPER_1v(debug, void, env)
DEF_HELPER_1v(reset_rf, void, env)
DEF_HELPER_3v(raise_interrupt, void, env, int, int)
DEF_HELPER_2v(raise_exception, void, env, int)
DEF_HELPER_1v(cli, void, env)
DEF_HELPER_1v(sti, void, env)
DEF_HELPER_1v(clac, void, env)
DEF_HELPER_1v(stac, void, env)
DEF_HELPER_3v(boundw, void, env, tl, int)
DEF_HELPER_3v(boundl, void, env, tl, int)
DEF_HELPER_1v(rsm, void, env)
DEF_HELPER_2v(into, void, env, int)
DEF_HELPER_2v(cmpxchg8b_unlocked, void, env, tl)
DEF_HELPER_2v(cmpxchg8b, void, env, tl)
#ifdef TARGET_X86_64
DEF_HELPER_2v(cmpxchg16b_unlocked, void, env, tl)
DEF_HELPER_2v(cmpxchg16b, void, env, tl)
#endif
DEF_HELPER_1v(single_step, void, env)
DEF_HELPER_1v(rechecking_single_step, void, env)
DEF_HELPER_1v(cpuid, void, env)
DEF_HELPER_1v(rdtsc, void, env)
DEF_HELPER_1v(rdtscp, void, env)
DEF_HELPER_1v(rdpmc, void, env)
DEF_HELPER_1v(rdmsr, void, env)
DEF_HELPER_1v(wrmsr, void, env)

DEF_HELPER_2v(check_iob, void, env, i32)
DEF_HELPER_2v(check_iow, void, env, i32)
DEF_HELPER_2v(check_iol, void, env, i32)
DEF_HELPER_3v(outb, void, env, i32, i32)
DEF_HELPER_2(inb, tl, env, i32)
DEF_HELPER_3v(outw, void, env, i32, i32)
DEF_HELPER_2(inw, tl, env, i32)
DEF_HELPER_3v(outl, void, env, i32, i32)
DEF_HELPER_2(inl, tl, env, i32)
DEF_HELPER_FLAGS_4v(bpt_io, TCG_CALL_NO_WG, void, env, i32, i32, tl)

DEF_HELPER_3v(svm_check_intercept_param, void, env, i32, i64)
DEF_HELPER_4v(svm_check_io, void, env, i32, i32, i32)
DEF_HELPER_3v(vmrun, void, env, int, int)
DEF_HELPER_1v(vmmcall, void, env)
DEF_HELPER_2v(vmload, void, env, int)
DEF_HELPER_2v(vmsave, void, env, int)
DEF_HELPER_1v(stgi, void, env)
DEF_HELPER_1v(clgi, void, env)
DEF_HELPER_1v(skinit, void, env)
DEF_HELPER_2v(invlpga, void, env, int)

/* x86 FPU */

DEF_HELPER_2v(flds_FT0, void, env, i32)
DEF_HELPER_2v(fldl_FT0, void, env, i64)
DEF_HELPER_2v(fildl_FT0, void, env, s32)
DEF_HELPER_2v(flds_ST0, void, env, i32)
DEF_HELPER_2v(fldl_ST0, void, env, i64)
DEF_HELPER_2v(fildl_ST0, void, env, s32)
DEF_HELPER_2v(fildll_ST0, void, env, s64)
DEF_HELPER_1(fsts_ST0, i32, env)
DEF_HELPER_1(fstl_ST0, i64, env)
DEF_HELPER_1(fist_ST0, s32, env)
DEF_HELPER_1(fistl_ST0, s32, env)
DEF_HELPER_1(fistll_ST0, s64, env)
DEF_HELPER_1(fistt_ST0, s32, env)
DEF_HELPER_1(fisttl_ST0, s32, env)
DEF_HELPER_1(fisttll_ST0, s64, env)
DEF_HELPER_2v(fldt_ST0, void, env, tl)
DEF_HELPER_2v(fstt_ST0, void, env, tl)
DEF_HELPER_1v(fpush, void, env)
DEF_HELPER_1v(fpop, void, env)
DEF_HELPER_1v(fdecstp, void, env)
DEF_HELPER_1v(fincstp, void, env)
DEF_HELPER_2v(ffree_STN, void, env, int)
DEF_HELPER_1v(fmov_ST0_FT0, void, env)
DEF_HELPER_2v(fmov_FT0_STN, void, env, int)
DEF_HELPER_2v(fmov_ST0_STN, void, env, int)
DEF_HELPER_2v(fmov_STN_ST0, void, env, int)
DEF_HELPER_2v(fxchg_ST0_STN, void, env, int)
DEF_HELPER_1v(fcom_ST0_FT0, void, env)
DEF_HELPER_1v(fucom_ST0_FT0, void, env)
DEF_HELPER_1v(fcomi_ST0_FT0, void, env)
DEF_HELPER_1v(fucomi_ST0_FT0, void, env)
DEF_HELPER_1v(fadd_ST0_FT0, void, env)
DEF_HELPER_1v(fmul_ST0_FT0, void, env)
DEF_HELPER_1v(fsub_ST0_FT0, void, env)
DEF_HELPER_1v(fsubr_ST0_FT0, void, env)
DEF_HELPER_1v(fdiv_ST0_FT0, void, env)
DEF_HELPER_1v(fdivr_ST0_FT0, void, env)
DEF_HELPER_2v(fadd_STN_ST0, void, env, int)
DEF_HELPER_2v(fmul_STN_ST0, void, env, int)
DEF_HELPER_2v(fsub_STN_ST0, void, env, int)
DEF_HELPER_2v(fsubr_STN_ST0, void, env, int)
DEF_HELPER_2v(fdiv_STN_ST0, void, env, int)
DEF_HELPER_2v(fdivr_STN_ST0, void, env, int)
DEF_HELPER_1v(fchs_ST0, void, env)
DEF_HELPER_1v(fabs_ST0, void, env)
DEF_HELPER_1v(fxam_ST0, void, env)
DEF_HELPER_1v(fld1_ST0, void, env)
DEF_HELPER_1v(fldl2t_ST0, void, env)
DEF_HELPER_1v(fldl2e_ST0, void, env)
DEF_HELPER_1v(fldpi_ST0, void, env)
DEF_HELPER_1v(fldlg2_ST0, void, env)
DEF_HELPER_1v(fldln2_ST0, void, env)
DEF_HELPER_1v(fldz_ST0, void, env)
DEF_HELPER_1v(fldz_FT0, void, env)
DEF_HELPER_1(fnstsw, i32, env)
DEF_HELPER_1(fnstcw, i32, env)
DEF_HELPER_2v(fldcw, void, env, i32)
DEF_HELPER_1v(fclex, void, env)
DEF_HELPER_1v(fwait, void, env)
DEF_HELPER_1v(fninit, void, env)
DEF_HELPER_2v(fbld_ST0, void, env, tl)
DEF_HELPER_2v(fbst_ST0, void, env, tl)
DEF_HELPER_1v(f2xm1, void, env)
DEF_HELPER_1v(fyl2x, void, env)
DEF_HELPER_1v(fptan, void, env)
DEF_HELPER_1v(fpatan, void, env)
DEF_HELPER_1v(fxtract, void, env)
DEF_HELPER_1v(fprem1, void, env)
DEF_HELPER_1v(fprem, void, env)
DEF_HELPER_1v(fyl2xp1, void, env)
DEF_HELPER_1v(fsqrt, void, env)
DEF_HELPER_1v(fsincos, void, env)
DEF_HELPER_1v(frndint, void, env)
DEF_HELPER_1v(fscale, void, env)
DEF_HELPER_1v(fsin, void, env)
DEF_HELPER_1v(fcos, void, env)
DEF_HELPER_3v(fstenv, void, env, tl, int)
DEF_HELPER_3v(fldenv, void, env, tl, int)
DEF_HELPER_3v(fsave, void, env, tl, int)
DEF_HELPER_3v(frstor, void, env, tl, int)
DEF_HELPER_FLAGS_2v(fxsave, TCG_CALL_NO_WG, void, env, tl)
DEF_HELPER_FLAGS_2v(fxrstor, TCG_CALL_NO_WG, void, env, tl)
DEF_HELPER_FLAGS_3v(xsave, TCG_CALL_NO_WG, void, env, tl, i64)
DEF_HELPER_FLAGS_3v(xsaveopt, TCG_CALL_NO_WG, void, env, tl, i64)
DEF_HELPER_FLAGS_3v(xrstor, TCG_CALL_NO_WG, void, env, tl, i64)
DEF_HELPER_FLAGS_2(xgetbv, TCG_CALL_NO_WG, i64, env, i32)
DEF_HELPER_FLAGS_3v(xsetbv, TCG_CALL_NO_WG, void, env, i32, i64)
DEF_HELPER_FLAGS_2(rdpkru, TCG_CALL_NO_WG, i64, env, i32)
DEF_HELPER_FLAGS_3v(wrpkru, TCG_CALL_NO_WG, void, env, i32, i64)

DEF_HELPER_FLAGS_2(pdep, TCG_CALL_NO_RWG_SE, tl, tl, tl)
DEF_HELPER_FLAGS_2(pext, TCG_CALL_NO_RWG_SE, tl, tl, tl)

/* MMX/SSE */

DEF_HELPER_2v(ldmxcsr, void, env, i32)
DEF_HELPER_1v(enter_mmx, void, env)
DEF_HELPER_1v(emms, void, env)
DEF_HELPER_3v(movq, void, env, ptr, ptr)

#define SHIFT 0
#include "lib/target/i386/ops_sse_header.h"
#define SHIFT 1
#include "lib/target/i386/ops_sse_header.h"

DEF_HELPER_3(rclb, tl, env, tl, tl)
DEF_HELPER_3(rclw, tl, env, tl, tl)
DEF_HELPER_3(rcll, tl, env, tl, tl)
DEF_HELPER_3(rcrb, tl, env, tl, tl)
DEF_HELPER_3(rcrw, tl, env, tl, tl)
DEF_HELPER_3(rcrl, tl, env, tl, tl)
#ifdef TARGET_X86_64
DEF_HELPER_3(rclq, tl, env, tl, tl)
DEF_HELPER_3(rcrq, tl, env, tl, tl)
#endif
